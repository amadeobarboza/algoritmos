
#include "stdafx.h"
#include "conio.h"
#include <iostream>
#define TAM 30
using namespace std;
void cargarVector (int A[],int n);
void mostrarVector(int A[], int n);
void diferenciaVect(int A[],int B[],int C[],int nA,int nB,int &nC);
bool pertenece(int ele,int V[],int n);

void main (void)
{
	int A[TAM],B[TAM],C[TAM],nA,nB,nC;
	cout<<"ingrese la dimension del vector A : ";
	cin>> nA;
	cargarVector(A,nA);
	cout<<"ingrese la dimension del vector B: ";
	cin>> nB;
	cargarVector(B,nB);
	diferenciaVect(A,B,C,nA,nB,nC);
	cout<<"la diferencia de los vectores es"<<endl;
	mostrarVector(C,nC);
	_getch();
}
void cargarVector (int A[],int n)
{
	int i;
	for(i=0; i < n;i++)
	{
		cout<<"A["<<i<<"] = ";
		cin>>A[i];
	}
}
void mostrarVector(int A[], int n)
{
	int i;
	for(i=0; i < n;i++)
		cout<<"A["<<i+1<<"] = "<<A[i]<<endl;
}

void diferenciaVect(int A[],int B[],int C[],int nA,int nB,int &nC)
{
	int i;
	nC = 0;
	for (i=0; i< nA; i++)
	{
		if( pertenece(A[i],B,nB)== false)
		{
			C[nC] = A[i];
			nC++;
		}
	}
}
bool pertenece(int ele,int V[],int n)
{	bool sw;
	int i;
	sw = false;
	for(i=0; i<n; i++)
	{
		if(ele == V[i])
			sw = true;
	}
	return(sw);

}
